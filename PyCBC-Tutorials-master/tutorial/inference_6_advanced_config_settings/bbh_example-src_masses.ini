[model]
name = gaussian_noise
low-frequency-cutoff = 20

[sampler]
name = emcee_pt
nwalkers = 1000
ntemps = 4
effective-nsamples = 1000
checkpoint-interval = 2000
max-samples-per-chain = 1000

[sampler-burn_in]
burn-in-test = nacl & max_posterior

[variable_params]
; waveform parameters that will vary in MCMC
tc =
srcmass1 =
srcmass2 =
spin1_a =
spin1_azimuthal =
spin1_polar =
spin2_a =
spin2_azimuthal =
spin2_polar =
distance =
coa_phase =
inclination =
polarization =
ra =
dec =

[static_params]
; waveform parameters that will not change in MCMC
approximant = IMRPhenomPv2
f_lower = 20
f_ref = 20

[prior-tc]
; coalescence time prior
name = uniform
min-tc = 1126259462.32
max-tc = 1126259462.52

[prior-srcmass1]
name = uniform
min-srcmass1 = 10.
max-srcmass1 = 80.

[prior-srcmass2]
name = uniform
min-srcmass2 = 10.
max-srcmass2 = 80.

[prior-spin1_a]
name = uniform
min-spin1_a = 0.0
max-spin1_a = 0.99

[prior-spin1_polar+spin1_azimuthal]
name = uniform_solidangle
polar-angle = spin1_polar
azimuthal-angle = spin1_azimuthal

[prior-spin2_a]
name = uniform
min-spin2_a = 0.0
max-spin2_a = 0.99

[prior-spin2_polar+spin2_azimuthal]
name = uniform_solidangle
polar-angle = spin2_polar
azimuthal-angle = spin2_azimuthal

[prior-distance]
; following gives a uniform volume prior
name = uniform_radius
min-distance = 10
max-distance = 1000

[prior-coa_phase]
; coalescence phase prior
name = uniform_angle

[prior-inclination]
; inclination prior
name = sin_angle

[prior-ra+dec]
; sky position prior
name = uniform_sky

[prior-polarization]
; polarization prior
name = uniform_angle

[waveform_transforms-spin1x+spin1y+spin1z]
name = spherical_to_cartesian
x = spin1x
y = spin1y
z = spin1z
radial = spin1_a
polar = spin1_polar
azimuthal = spin1_azimuthal

[waveform_transforms-spin2x+spin2y+spin2z]
name = spherical_to_cartesian
x = spin2x
y = spin2y
z = spin2z
radial = spin2_a
polar = spin2_polar
azimuthal = spin2_azimuthal

[waveform_transforms-mass1]
name = custom
inputs = srcmass1, distance
mass1 = srcmass1 * (1 + redshift(distance))

[waveform_transforms-mass2]
name = custom
inputs = srcmass2, distance
mass2 = srcmass2 * (1 + redshift(distance))


;
;   Sampling transforms
;
[sampling_params]
; parameters on the left will be sampled in
; parametes on the right
srcmass1, srcmass2 = mchirp, q

[sampling_transforms-mchirp+q]
name = mass1_mass2_to_mchirp_q
mass1_param = srcmass1
mass2_param = srcmass2
